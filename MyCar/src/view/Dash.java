package view;

import controller.DashController;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Direction;
import model.Electric;
import model.Engine;
import util.IConstants;

/**
 *
 * @author Yelson
 */
public class Dash extends javax.swing.JFrame implements IConstants, Observer, KeyListener {

    private DashController Controller;
    private RoadView RoadPanelView;

    /**
     * Creates new form Dash
     */
    public Dash() {
        super("MyCar");        
        initComponents();        
        init();
    }

    private void init() {
        this.setSize(WIDTH_WINDOW, HEIGHT_WINDOW);
        lblFondo.setOpaque(false);
        
        try {            
            lbl_RigthLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\RigthOff.png"))));
            lbl_LeftLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\leftOff.png"))));
        } catch (IOException ex) {
            Logger.getLogger(Dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        this.RoadPanelView = new RoadView(jLRoadView);      
        
        this.addKeyListener(this);

        ImageIcon imagen = new ImageIcon("src/images/CarDash.png");
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(lblFondo.getWidth(), lblFondo.getHeight(), Image.SCALE_DEFAULT));
        lblFondo.setIcon(icono);
        this.repaint();
        
        controllerManager();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_RPM = new javax.swing.JLabel();
        lbl_numRPM = new javax.swing.JLabel();
        lbl_cantPts = new javax.swing.JLabel();
        lbl_numKMH = new javax.swing.JLabel();
        lbl_KMH2 = new javax.swing.JLabel();
        lbl_PTS = new javax.swing.JLabel();
        lbl_Gear = new javax.swing.JLabel();
        lbl_Cleanner = new javax.swing.JLabel();
        lbl_Lights = new javax.swing.JLabel();
        lbl_cantPts4 = new javax.swing.JLabel();
        lbl_LeftLigth = new javax.swing.JLabel();
        lbl_RigthLigth = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();
        jLRoadView = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        ItemOpenFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 530));
        getContentPane().setLayout(null);

        lbl_RPM.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_RPM.setForeground(new java.awt.Color(255, 255, 255));
        lbl_RPM.setText("RPM");
        getContentPane().add(lbl_RPM);
        lbl_RPM.setBounds(470, 370, 60, 30);

        lbl_numRPM.setFont(new java.awt.Font("Microsoft YaHei UI", 3, 20)); // NOI18N
        lbl_numRPM.setForeground(new java.awt.Color(255, 255, 255));
        lbl_numRPM.setText("0");
        getContentPane().add(lbl_numRPM);
        lbl_numRPM.setBounds(470, 340, 100, 30);

        lbl_cantPts.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_cantPts.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cantPts.setText("=D");
        getContentPane().add(lbl_cantPts);
        lbl_cantPts.setBounds(740, 340, 40, 30);

        lbl_numKMH.setFont(new java.awt.Font("Microsoft YaHei UI", 3, 20)); // NOI18N
        lbl_numKMH.setForeground(new java.awt.Color(255, 255, 255));
        lbl_numKMH.setText("0");
        getContentPane().add(lbl_numKMH);
        lbl_numKMH.setBounds(600, 330, 60, 30);

        lbl_KMH2.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_KMH2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_KMH2.setText("KMH");
        getContentPane().add(lbl_KMH2);
        lbl_KMH2.setBounds(600, 350, 70, 30);

        lbl_PTS.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_PTS.setForeground(new java.awt.Color(255, 255, 255));
        lbl_PTS.setText("PTS");
        getContentPane().add(lbl_PTS);
        lbl_PTS.setBounds(630, 390, 60, 30);

        lbl_Gear.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_Gear.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Gear.setText("/N/");
        getContentPane().add(lbl_Gear);
        lbl_Gear.setBounds(740, 380, 40, 30);

        lbl_Cleanner.setFont(new java.awt.Font("MS Office Symbol Bold", 3, 18)); // NOI18N
        lbl_Cleanner.setForeground(new java.awt.Color(255, 0, 0));
        lbl_Cleanner.setText("0");
        getContentPane().add(lbl_Cleanner);
        lbl_Cleanner.setBounds(780, 380, 90, 30);

        lbl_Lights.setFont(new java.awt.Font("MS Office Symbol Bold", 3, 18)); // NOI18N
        lbl_Lights.setForeground(new java.awt.Color(255, 0, 0));
        lbl_Lights.setText("0");
        getContentPane().add(lbl_Lights);
        lbl_Lights.setBounds(780, 340, 40, 30);

        lbl_cantPts4.setFont(new java.awt.Font("Microsoft New Tai Lue", 3, 20)); // NOI18N
        lbl_cantPts4.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cantPts4.setText("100");
        getContentPane().add(lbl_cantPts4);
        lbl_cantPts4.setBounds(590, 390, 60, 30);
        getContentPane().add(lbl_LeftLigth);
        lbl_LeftLigth.setBounds(110, 250, 50, 50);
        getContentPane().add(lbl_RigthLigth);
        lbl_RigthLigth.setBounds(240, 250, 50, 50);

        lblFondo.setBackground(new java.awt.Color(255, 0, 153));
        getContentPane().add(lblFondo);
        lblFondo.setBounds(0, 0, 920, 470);
        getContentPane().add(jLRoadView);
        jLRoadView.setBounds(0, 0, 920, 380);

        ItemOpenFile.setText("Archivo");

        jMenuItem1.setText("Abrir archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        ItemOpenFile.add(jMenuItem1);

        jMenuBar1.add(ItemOpenFile);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        OpenFile();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Dash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu ItemOpenFile;
    private javax.swing.JLabel jLRoadView;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lbl_Cleanner;
    private javax.swing.JLabel lbl_Gear;
    private javax.swing.JLabel lbl_KMH2;
    private javax.swing.JLabel lbl_LeftLigth;
    private javax.swing.JLabel lbl_Lights;
    private javax.swing.JLabel lbl_PTS;
    private javax.swing.JLabel lbl_RPM;
    private javax.swing.JLabel lbl_RigthLigth;
    private javax.swing.JLabel lbl_cantPts;
    private javax.swing.JLabel lbl_cantPts4;
    private javax.swing.JLabel lbl_numKMH;
    private javax.swing.JLabel lbl_numRPM;
    // End of variables declaration//GEN-END:variables


    private void OpenFile() {
        JFileChooser FileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("MyCar format", "mc");
        FileChooser.setFileFilter(filter);
        int returnVal = FileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Controller.setFileRoadPath(FileChooser.getSelectedFile().getAbsolutePath());
        }
    }

    @Override
    public void update(Observable o, Object arg) {
        if(o instanceof DashController){
            Engine EngineUptaded = (Engine)Controller.getEngineCoordinator();
            lbl_numRPM.setText(EngineUptaded.getRevolutions() + "");
            lbl_numKMH.setText(EngineUptaded.speedToKmH() + " ");
            
            if(EngineUptaded.getGear() != 0){
                lbl_Gear.setText(EngineUptaded.getGear() + "");
            }else{
                lbl_Gear.setText("N");
            }
            
            Direction DirectionUpdated = (Direction) Controller.getDirectionCoordinator();
            
            
            Electric ElectricUpdated = (Electric) Controller.getElectricCoordinator();
            if(ElectricUpdated.isLightsOn()){
                lbl_Lights.setForeground(Color.green);
                lbl_Lights.setText("1");
            }else{
                lbl_Lights.setForeground(Color.red);
                lbl_Lights.setText("0");
            }
            if(ElectricUpdated.isWindShielOn()){
                lbl_Cleanner.setForeground(Color.green);
                lbl_Cleanner.setText(" /N/  1");
            }else{
                lbl_Cleanner.setForeground(Color.red);
                lbl_Cleanner.setText(" /N/  0");
            }
            
            try {
                if(ElectricUpdated.isLeftOn()){
                    lbl_LeftLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\leftOn.png"))));
                }else{
                    lbl_LeftLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\leftOff.png"))));
                }
                if(ElectricUpdated.isRigthOn()){
                    lbl_RigthLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\RigthOn.png"))));
                }else{
                    lbl_RigthLigth.setIcon(new ImageIcon(ImageIO.read(new File("C:\\Users\\Nelson\\Documents\\NetBeansProjects\\MyCar\\MyCar\\src\\assets\\RigthOff.png"))));
                }
            } catch (IOException ex) {
                Logger.getLogger(Dash.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void controllerManager() {
        this.Controller = new DashController(RoadPanelView, 0, this);
    }

    @Override
    public void keyTyped(KeyEvent e) {
        
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_A) {
            Controller.startLeftLigth();
            System.out.println("Direccional Izquierda");
        }        
        if (e.getKeyCode() == KeyEvent.VK_D) {
            Controller.startRigthLigth();
            System.out.println("Direccional Derecha");
        }        
        if (e.getKeyCode() == KeyEvent.VK_W) {
            Controller.upGear();
            System.out.println("Subir marcha");
        }
        if (e.getKeyCode() == KeyEvent.VK_S) {
            Controller.downGear();
            System.out.println("Bajar marcha");
        }
        if (e.getKeyCode() == KeyEvent.VK_Z) {
            Controller.starWindShield();
            System.out.println("Enciende, apaga cleaner");
        }
        if (e.getKeyCode() == KeyEvent.VK_X) {
            Controller.shutDownLigths();
            System.out.println("Apaga luces");
        }
        if (e.getKeyCode() == KeyEvent.VK_SPACE) {
            Controller.switchLigthsState();
            System.out.println("Enciende Apaga Luz");
        }
        if (e.getKeyCode() == KeyEvent.VK_LEFT) {
            System.out.println("Izquierda");
            Controller.turnLeft();
        }
        if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
            System.out.println("Derecha");
            Controller.turnRigth();
        }
        if (e.getKeyCode() == KeyEvent.VK_UP) {
            Controller.speedUp();
            System.out.println("Acelerar");
        }
        if (e.getKeyCode() == KeyEvent.VK_DOWN) {
            Controller.slowDown();
            System.out.println("Frenar");
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {

    }
}
